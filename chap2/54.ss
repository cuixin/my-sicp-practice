(define (equal? a b)
        (if (and (pair? a) (pair? b))
            (and (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))
            (eq? a b)))

(define (equal2? a b)
        (if (= (length a) (length b))
               (let ((results (map eq? a b)))
                    (define (all-true x)
                            (cond ((null? x) #t)
                                  ((not (car x)) #f)
                                  (else (all-true (cdr x)))))
                    (all-true results))
            #f))